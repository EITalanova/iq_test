{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-3b807a7ac15f8725.js","src/js/footer.js","node_modules/@parcel/runtime-js/lib/runtime-7102f6abec08a917.js","node_modules/@parcel/runtime-js/lib/runtime-49ef685571e0afe6.js","node_modules/@parcel/runtime-js/lib/runtime-8a8d662fb2cb6a6d.js","src/js/markup.js","src/js/burger-menu.js","src/js/timer.js","src/js/fetchCardRequset.js","src/js/test.js","node_modules/@parcel/runtime-js/lib/runtime-e35f120233292a69.js","node_modules/@parcel/runtime-js/lib/runtime-bc27ac8056e46da3.js","node_modules/@parcel/runtime-js/lib/runtime-e9021c739f32b256.js","src/js/test_data.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.3b17c9f8.js\\\",\\\"jAg1J\\\":\\\"blue_brain.dc6e3056.png\\\",\\\"3eYLp\\\":\\\"loader.3abc50f0.png\\\",\\\"9g7hS\\\":\\\"call.2aa63eab.png\\\",\\\"g8vy3\\\":\\\"qu_people.2040f240.png\\\",\\\"3y2hD\\\":\\\"qu_snack.ae8b2495.png\\\",\\\"4y0Iy\\\":\\\"qu_star.bfb9e203.png\\\"}\"));","const footerYear = document.querySelector('.footer__year');\n\nfooterYear.innerHTML = new Date().getFullYear();\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"jAg1J\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3eYLp\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"9g7hS\")).toString();","import blue_brain from '../images/blue_brain.png';\nimport loader from '../images/loader.png';\nimport call from '../images/call.png';\n\nexport const renderQuestionPage = `<div class=\"question__container\"><progress class=\"question__progress\" max=\"0\" value=\"0\"></progress><div class=\"question\"><p class=\"question__text\"></p></div><span class=\"line\"></span><ul class=\"answer__list\">\n<li class=\"answer__ell\">\n    <span class=\"answer__radioBtn\"></span>\n    <span class=\"span answer__text\"></span>\n</li>\n<li class=\"answer__ell\">\n    <span class=\"answer__radioBtn\"></span>\n    <span class=\"span answer__text\">Женщина</span>\n</li>\n</ul><button type=\"button\" class=\"btn btn--no-active a btn--next\"><p class=\"btn-text\">далее</p></button></div>`;\n\nexport const renderQuestionHeader = `<div class=\"header__box\">\n  <img src=\"${blue_brain}\" alt=\"blue_brain\" class=\"header__pic\" width=\"48\" height=\"47\">\n  <p class=\"header__title\">тест на определение IQ\n</p>\n</div>`;\n\nexport const renderLoader = `<div class=\"loading__container\"><p class=\"loading__title\">Обработка </br> результатов</p>\n    <img class=\"loading__img\" src=${loader} alt=\"loader\" width=\"65\" heigth=\"68\">\n<p class=\"loading__text\">Определение стиля мышления...........</br>\n..........................................................</p></div>`;\n\nexport const renderResult = ` <p class=\"result--title\">Ваш результат рассчитан:</p>\n<p class=\"result\">Вы относитесь к 3% респондентов, чей уровень интеллекта более чем на \n15 пунктов отличается от среднего в большую или меньшую сторону! </p>\n<p class=\"result--appeal\">Скорее получите свой результат!</p>\n<p class=\"result--info\">\n  В целях защиты персональных данных результат теста, их подробная интерпретация\n  и рекомендации доступны в виде голосового сообщения по звонку с вашего\n  мобильного телефона\n</p>\n<p class=\"result--callTimer\">Звоните скорее, запись доступна всего </br> \n<span class=\"min\">10</span>\n:\n<span class=\"sec\">00</span>\nминут</p>\n<button type=\"button\" class=\"result--callBox\">\n<img class=\"result--svg\" src=${call} alt=\"call\" width=\"29\" height=\"29\">\n<p class=\"result--call\">Позвонить и прослушать </br>результат</p>\n</button>`;\n\nexport const renderFooter = `<p class=\"footer__text\">TERMENI SI CONDITII: ACESTA ESTE UN SERVICIU DE DIVERTISMENT. PRIN FOLOSIREA LUI DECLARATI CA AVETI 18 ANI IMPLINITI, </p>`;\n\nexport const renderMainPage = `<section>\n  <div id=\"main\" class=\"main-page__hero\">\n    <div class=\"main-page__titleBox\">\n    <p class=\"main-page__text\">Пройдите точный и быстрый</p>\n    <h1 class=\"main-page__title\">\n      тест на определение IQ\n    </h1>\n    </div>\n    <div class=\"main-page__box\">\n    <button class=\"btn btn__start\">пРойти тест</button>\n    <p class=\"main-page__text\">\n      и получите рекомендации <br />по развитию своего интеллекта\n    </p>\n    <p class=\"main-page__text main-page__text--yellow\">\n      и улучшению финансового <br />благосостояния и личной жизни\n    </p>\n    <a class=\"main-page__btn\" href=\"#info\">\n      <svg class=\"main-page__btn-arrow\" width=\"16\" height=\"16\">\n        <use href=\"./images/sprite.svg#icon-arrow\"></use>\n      </svg>\n      <p class=\"main-page__btn-text\">Подробнее</p>\n    </a>\n    </div>\n  </div>\n\n  <div id=\"info\" class=\"main-page__discription\">\n    <svg class=\"main-page__quotation-mark\" width=\"23\" height=\"22\">\n      <use href=\"./images/sprite.svg#icon-quotation-mark\"></use>\n    </svg>\n    <p class=\"main-page__discription-text\">\n      Профессиональный <br />IQ-тест позволяет не <br />только определить\n      <br />коэффициент вашего <br />интеллекта,<br />\n      но и выработать список <br />рекомендаций для <br />повышения этого\n      <br />показателя.\n    </p>\n    <svg class=\"main-page__quotation-mark--reverse\" width=\"23\" height=\"22\">\n      <use href=\"./images/sprite.svg#icon-quotation-mark\"></use>\n    </svg>\n  </div>\n\n  <div class=\"main-page__details\">\n    <p class=\"main-page__details-text\">\n      Также по результатам теста<br />\n      <span class=\"main-page__details-text--upper\">вы получите</span>\n      подробные<br />\n      <span class=\"main-page__details-text--upper\">советы</span> по определению\n      наиболее <br />\n      перспективной\n      <span class=\"main-page__details-text--upper\">для вашего <br />типа</span>\n      <span class=\"main-page__details-text--weight\">интеллекта</span>\n      <span class=\"main-page__details-text--upper\"\n        >сферы <br />деятельности,<br\n      /></span>\n      которая принесет вам скорейший <br />финансовый результат.\n    </p>\n    <img src=\"./images/brain.png\" alt=\"brain\" class=\"main-page__img-brain\" />\n    <button class=\"btn btn__start\">\n      <p class=\"btn-text\">пройти тест</p>\n    </button>\n  </div>\n\n  <div id=\"test\" class=\"main-page__brief\">\n    <img src=\"./images/lightning(1).png\" alt=\"lightning\" class=\"main-page__brief-img1\">\n    <img src=\"./images/lightning(2).png\" alt=\"lightning\" class=\"main-page__brief-img2\">\n    <p class=\"main-page__details-text--white\">\n      Прохождение теста займет у <br />вас не более\n      <span class=\"main-page__details-text--yellow\">12 минут,</span> а его\n      <br /><span class=\"main-page__details-text--weight\">результаты</span> вы\n      сможете <br /><span class=\"main-page__details-text--yellow\"\n        >использовать всю жизнь.</span\n      >\n    </p>\n    <p class=\"main-page__details-text main-page__text-box\">Профессиональная <br />интерпретация и детально <br /><span class=\"main-page__details-text--weight\">проработанные <br />рекомендации</span> позволят вам <br />качественно <span class=\"main-page__details-text--weight\"></span>изменить все <br />аспекты своей\n    жизни:</span> от <br />финансового до любовного.</p>\n    <button class=\"btn btn--black btn__start\">\n      <p class=\"btn-text\">пройти тест</p>\n    </button>\n  </div>\n</section>\n`;\n\nexport function renderRequestCard(people) {\n  return `<div class=\"card\"> \n  <p class=\"card__name\">${people.name}</p>\n  <ul class=\"card__list\">\n    <li class=\"card__item\">🧍‍♂/🧍‍♀: ${people.gender}</li>\n    <li class=\"card__item\">📏: ${people.height}</li>\n    <li class=\"card__item\">⚖️: ${people.mass}</li>\n    <li class=\"card__item\">👁: ${people.skin_color}</li>\n  </ul>\n  </div>`;\n}\n","import { renderMainPage } from './markup';\n\nconst main = document.querySelector('.main');\nconst burgerMenu = document.querySelector('.menu');\nconst menuOpenBtn = document.querySelector('.header__btn');\nconst menuCloseBtn = document.querySelector('.menu__btn-close');\nconst menuLink = document.querySelector('.menu__list');\n\nconst toggleMenu = () => {\n  burgerMenu.classList.toggle('invisible');\n};\n\nmenuOpenBtn.addEventListener('click', toggleMenu);\nmenuCloseBtn.addEventListener('click', toggleMenu);\nmenuLink.addEventListener('click', () => {\n  const mainContainer = document.querySelector('.main-page__hero');\n\n  if (!mainContainer) {\n    main.innerHTML = renderMainPage;\n    const headerBox = document.querySelector('.header__box');\n    headerBox.innerHTML = '';\n    toggleMenu();\n  } else {\n    toggleMenu();\n  }\n});\n","let ms = 600000;\n\nexport function updateTimer() {\n  let interval = setInterval(function () {\n    ms = ms - 1000;\n    const { minutes, seconds } = convertMs(ms);\n\n    time({ minutes, seconds });\n    if (ms === 0) {\n      clearInterval(interval);\n      return;\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n\n  const minutes = Math.floor(ms / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { minutes, seconds };\n}\n\nfunction time({ minutes, seconds }) {\n  const min = document.querySelector('.min');\n  const sec = document.querySelector('.sec');\n\n  min.textContent = addLeadingZero(minutes);\n  sec.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  if (String(value).length <= 1) {\n    return String(value).padStart(2, '0');\n  }\n  return `${value}`;\n}\n","import { renderRequestCard } from './markup';\n\nexport function fetchCardRequest() {\n  const callBox = document.querySelector('.result--callBox');\n  const url = `https://swapi.dev/api/people/1/?format=json`;\n\n  fetch(url)\n    .then(response => response.json())\n      .then(\n          response => {\n      callBox.insertAdjacentHTML('afterend', renderRequestCard(response));\n    }\n    );\n}\n","import {\n  renderQuestionPage,\n  renderQuestionHeader,\n  renderLoader,\n  renderFooter,\n  renderResult,\n} from './markup';\nimport { updateTimer } from './timer';\nimport { fetchCardRequest } from './fetchCardRequset';\nimport { test, questions, results } from './test_data';\n\nconst header = document.querySelector('.header');\nconst main = document.querySelector('.main');\nconst startTestBtn = document.querySelectorAll('.btn__start');\n\n//Конструктор теста\nexport class Test {\n  constructor(questions, resuits) {\n    this.questions = questions;\n    this.results = results;\n    this.result = 0;\n    this.score = 0;\n    this.currentQuestion = 0;\n  }\n\n  //Добавление баллов\n  Click(index) {\n    let value = this.questions[this.currentQuestion].Click(index);\n    this.score += value;\n\n    let correct = -1;\n    if (value >= 1) {\n      correct = index;\n    } else {\n      for (\n        let i = 0;\n        i < this.questions[this.currentQuestion].answers.length;\n        i += 1\n      ) {\n        if (this.questions[this.currentQuestion].answers[i].value >= 1) {\n          correct = i;\n          break;\n        }\n      }\n    }\n    this.Next();\n    return correct;\n  }\n\n  //Переход к следующему вопросу\n  Next() {\n    this.currentQuestion += 1;\n    if (this.currentQuestion >= this.questions.length) {\n      this.End();\n    }\n  }\n\n  //Получение результата\n  End() {\n    for (let i = 0; i < this.results.length; i += 1) {\n      if (this.results[i].Check(this.score)) {\n        this.result = i;\n      }\n    }\n  }\n}\n\n//Конструктор вопросов теста\nexport class Question {\n  constructor(type, text, picture, answers) {\n    this.type = type;\n    this.text = text;\n    this.picture = picture;\n    this.answers = answers;\n  }\n\n  Click(index) {\n    return this.answers[index].value;\n  }\n}\n\n//Конструктор ответов теста\nexport class Answer {\n  constructor(text, value) {\n    this.text = text;\n    this.value = value;\n  }\n}\n\n//Конструктор результатов теста\nexport class Result {\n  constructor(text, value) {\n    this.text = text;\n    this.value = value;\n  }\n\n  //Проверка очков для получения определенного результата\n  Check(value) {\n    if (this.value <= value) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\n//Слушатели на кнопки запуска теста\nfor (let i = 0; i < startTestBtn.length; i += 1) {\n  startTestBtn[i].addEventListener('click', renderPage);\n}\n\n//Рендер страницы с вопросом\nfunction renderPage() {\n  header.insertAdjacentHTML('afterbegin', renderQuestionHeader);\n  main.innerHTML = renderQuestionPage;\n\n  //Возможность загрузки следующего вопроса, если выбран хоть один вариант\n  const nextQuestionBtn = document.querySelector('.btn');\n  nextQuestionBtn.addEventListener('click', () => {\n    if (nextQuestionBtn.classList.contains('btn--no-active')) {\n      return;\n    }\n    nextPage();\n  });\n  nextPage();\n}\n\n//Функция загрузки следующего вопроса\nfunction nextPage() {\n  const questionContainer = document.querySelector('.question__container');\n  const footer = document.querySelector('.footer');\n  const nextQuestionBtn = document.querySelector('.btn');\n  const answers = document.querySelector('.answer__list');\n\n  if (test.currentQuestion < test.questions.length) {\n    //Загрузка строки прогресса\n    progress();\n\n    footer.innerHTML = '';\n\n    //Рендер текста вопроса в зависимости от наличия картинки в нем\n    questionText();\n\n    //Рендер вариантов ответов в зависимости от типа вопроса (текст, список, цветов, числа и т.д.)\n    answers.innerHTML = '';\n\n    answerText();\n\n    nextQuestionBtn.classList.add('btn--no-active');\n\n    //Функция выбора и стилизации ответов\n    Init();\n  } else {\n    //Загрузка лоудера до результата\n    questionContainer.innerHTML = renderLoader;\n\n    //Загрузка результата теста\n    renderResultPage();\n  }\n}\n\n//Функция загрузки строки прогресса\nconst progress = () => {\n  const questionProgress = document.querySelector('.question__progress');\n  questionProgress.setAttribute('max', test.questions.length);\n  questionProgress.setAttribute('value', test.currentQuestion);\n};\n\n//Функция загрузки текста вопроса в зависимости от наличия картинки в нем\nconst questionText = () => {\n  const question = document.querySelector('.question');\n  if (test.questions[test.currentQuestion].picture !== 0) {\n    question.innerHTML = `<p class=\"question__text\">\n      ${test.questions[test.currentQuestion].text}\n      </p><img class=\"question__img\" src=${\n        test.questions[test.currentQuestion].picture\n      } alt=\"pic\">`;\n  } else {\n    question.innerHTML = `<p class=\"question__text\">${\n      test.questions[test.currentQuestion].text\n    }</p>`;\n  }\n};\n\n//Функция загрузки вариантов ответов в зависимости от типа вопроса (текст, список, цветов, числа и т.д.)\nconst answerText = () => {\n  const answers = document.querySelector('.answer__list');\n  const line = document.querySelector('.line');\n  for (\n    let i = 0;\n    i < test.questions[test.currentQuestion].answers.length;\n    i += 1\n  ) {\n    switch (test.questions[test.currentQuestion].type) {\n      case 'text':\n        answers.classList.remove('answer__list--color');\n        answers.classList.remove('answer__list--numbers');\n\n        answers.insertAdjacentHTML(\n          'beforeend',\n          `<li class=\"answer__ell ell\">\n            <span class=\"answer__radioBtn\"></span>\n                <span class=\"span answer__text\">${\n                  test.questions[test.currentQuestion].answers[i].text\n                }</span>\n            </li>`\n        );\n        break;\n\n      case 'color':\n        answers.classList.add('answer__list--color');\n        answers.classList.remove('answer__list--numbers');\n\n        answers.insertAdjacentHTML(\n          'beforeend',\n          `<li class=\"answer__colorEll ell\" style=\"background:#${\n            test.questions[test.currentQuestion].answers[i].text\n          }\"><button class=\"btn--answer\"type=\"button\"></button></li>`\n        );\n        break;\n\n      case 'numbers':\n        answers.classList.remove('answer__list--color');\n        answers.classList.add('answer__list--numbers');\n\n        answers.insertAdjacentHTML(\n          'beforeend',\n          `<li class=\"answer__numPic ell\">${\n            test.questions[test.currentQuestion].answers[i].text\n          }</li>`\n        );\n        break;\n\n      case 'numbers&line':\n        line.classList.add('line--active');\n        answers.classList.add('answer__list--numbers');\n        answers.classList.remove('answer__list--color');\n\n        answers.insertAdjacentHTML(\n          'beforeend',\n          `<li class=\"answer__numPic ell\">${\n            test.questions[test.currentQuestion].answers[i].text\n          }</li>`\n        );\n        break;\n    }\n  }\n};\n\n//Функция выбора и стилизации ответов\nconst Init = () => {\n  const nextQuestionBtn = document.querySelector('.btn');\n  let answersBtn = document.querySelectorAll('.ell');\n\n  for (let i = 0; i < answersBtn.length; i += 1) {\n    answersBtn[i].addEventListener('click', function (e) {\n      if (answersBtn[i].classList.contains('answer__ell')) {\n        for (let i = 0; i < answersBtn.length; i += 1) {\n          if (answersBtn[i].classList.contains('answer__ell--active')) {\n            answersBtn[i].classList.remove('answer__ell--active');\n          }\n        }\n        answersBtn[i].classList.add('answer__ell--active');\n      }\n\n      if (answersBtn[i].classList.contains('answer__colorEll')) {\n        for (let i = 0; i < answersBtn.length; i += 1) {\n          if (answersBtn[i].classList.contains('answer__colorEll--active')) {\n            answersBtn[i].classList.remove('answer__colorEll--active');\n          }\n        }\n        answersBtn[i].classList.add('answer__colorEll--active');\n      }\n      if (answersBtn[i].classList.contains('answer__numPic')) {\n        for (let i = 0; i < answersBtn.length; i += 1) {\n          if (answersBtn[i].classList.contains('answer__numPic--active')) {\n            answersBtn[i].classList.remove('answer__numPic--active');\n          }\n        }\n        answersBtn[i].classList.add('answer__numPic--active');\n      }\n      nextQuestionBtn.classList.remove('btn--no-active');\n      Click(i);\n    });\n  }\n};\n\nconst Click = index => {\n  let correct = test.Click(index);\n};\n\n//Функция загрузки результата теста\nconst renderResultPage = () => {\n  const questionContainer = document.querySelector('.question__container');\n  const headerTitle = document.querySelector('.header__title');\n  const headerBox = document.querySelector('.header__box');\n  const footer = document.querySelector('.footer');\n\n  setTimeout(() => {\n    questionContainer.innerHTML = renderResult;\n\n    const result = document.querySelector('.result');\n    result.innerHTML = test.results[test.result].text;\n    headerTitle.innerHTML = 'Готово!';\n    footer.innerHTML = renderFooter;\n\n    headerBox.classList.add('header__box--result');\n    questionContainer.classList.add('result__container');\n\n    //Установка слушателя на скрол для футера\n    const footerText = document.querySelector('.footer__text');\n    window.addEventListener('scroll', () =>\n      footerText.classList.add('footer__text--scroll')\n    );\n\n    //Запуск тамера\n    updateTimer();\n\n    //Установка слушателя на кнопку звонка для запроса к API\n    const callBox = document.querySelector('.result--callBox');\n    callBox.addEventListener('click', fetchCardRequest);\n  }, 1000);\n};\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"g8vy3\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"3y2hD\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4y0Iy\")).toString();","import { Test, Result, Question, Answer } from './test';\nimport qu_people from '../images/qu_people.png';\nimport qu_snack from '../images/qu_snack.png';\nimport qu_star from '../images/qu_star.png';\n\n//Массив с результатами\nexport const results = [\n  new Result(\n    'Вы относитесь к 3% респондентов, чей уровень интеллекта более чем на 15 пунктов отличается от среднего в большую или меньшую сторону!',\n    0\n  ),\n  new Result(\n    'Вы относитесь к 3% респондентов, чей уровень интеллекта более чем на 15 пунктов отличается от среднего в большую или меньшую сторону!',\n    30\n  ),\n];\n\n//Массив с вопросами и ответами\nexport const questions = [\n  new Question('text', 'Ваш пол:', 0, [\n    new Answer('Мужчина', 1),\n    new Answer('Женщина', 2),\n  ]),\n  new Question('text', 'Укажите ваш возраст:', 0, [\n    new Answer('До 18', 1),\n    new Answer('От 18 до 28', 2),\n    new Answer('От 29 до 35', 3),\n    new Answer('От 36', 4),\n  ]),\n  new Question('text', 'Выберите лишнее:', 0, [\n    new Answer('Дом', 1),\n    new Answer('Шалаш', 2),\n    new Answer('Бунгало', 3),\n    new Answer('Скамейка', 4),\n    new Answer('Хижина', 5),\n  ]),\n  new Question('text', 'Продолжите числовой ряд: </br> 18  20  24  32  ', 0, [\n    new Answer('62', 1),\n    new Answer('48', 2),\n    new Answer('74', 3),\n    new Answer('57', 4),\n    new Answer('60', 5),\n    new Answer('77', 6),\n  ]),\n  new Question(\n    'color',\n    'Выберите цвет, который </br>сейчас наиболее Вам </br>приятен:',\n    0,\n    [\n      new Answer('A8A8A8', 1),\n      new Answer('0000A9', 2),\n      new Answer('00A701', 3),\n      new Answer('F60100', 4),\n      new Answer('FDFF19', 5),\n      new Answer('A95403', 4),\n      new Answer('000000', 5),\n      new Answer('850068', 6),\n      new Answer('46B2AC', 7),\n    ]\n  ),\n  new Question(\n    'color',\n    'Отдохните пару секунд, еще </br>раз Выберите цвет, который </br>сейчас наиболее Вам </br>приятен:',\n    0,\n    [\n      new Answer('A8A8A8', 1),\n      new Answer('46B2AC', 2),\n      new Answer('A95403', 3),\n      new Answer('00A701', 4),\n      new Answer('000000', 5),\n      new Answer('F60100', 6),\n      new Answer('850068', 7),\n      new Answer('FDFF19', 8),\n      new Answer('0000A9', 9),\n    ]\n  ),\n  new Question('text', 'Какой из городов</br> лишний?', 0, [\n    new Answer('Вашингтон', 1),\n    new Answer('Лондон ', 2),\n    new Answer('Париж', 3),\n    new Answer('Нью-Йорк', 4),\n    new Answer('Москва', 5),\n    new Answer('Оттава', 6),\n  ]),\n  new Question(\n    'numbers',\n    'Выберите правильную фигуру</br> из четырёх пронумерованных.',\n    qu_people,\n    [\n      new Answer('1', 1),\n      new Answer('2', 2),\n      new Answer('3', 3),\n      new Answer('4', 4),\n    ]\n  ),\n  new Question('text', 'Вам привычнее и важнее:', 0, [\n    new Answer('Наслаждаться </br>каждой минутой </br>проведенного времени', 1),\n    new Answer('Быть устремленными </br>мыслями в будущее', 2),\n    new Answer('Учитывать в ежедневной</br> практике прошлый опыт', 3),\n  ]),\n  new Question(\n    'text',\n    'Какое определение, по-Вашему, больше подходит к этому геометрическому изображению: ',\n    qu_snack,\n    [\n      new Answer('Оно остроконечное', 1),\n      new Answer('Оно устойчиво', 2),\n      new Answer('Оно находится в </br>состоянии равновесия', 3),\n    ]\n  ),\n  new Question('numbers&line', 'Вставьте подходящее число', qu_star, [\n    new Answer('34', 1),\n    new Answer('36', 2),\n    new Answer('53', 3),\n    new Answer('44', 4),\n    new Answer('66', 5),\n    new Answer('53', 6),\n  ]),\n];\n\n//Создание теста\nexport const test = new Test(questions, results);\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","document","querySelector","innerHTML","Date","getFullYear","$4ae5dcd7c05279c8$exports","URL","resolve","import","meta","url","toString","$81a29897332f59e0$exports","$3ab8c4145855a70d$exports","$263aef85a4d00bfb$export$b3543e4b15a92f35","$parcel$interopDefault","$263aef85a4d00bfb$export$d06f0fb753b3aaf6","$263aef85a4d00bfb$export$8d5c3f15ecd2b513","$6442e51d8b52aaf7$var$main","$6442e51d8b52aaf7$var$burgerMenu","$6442e51d8b52aaf7$var$menuOpenBtn","$6442e51d8b52aaf7$var$menuCloseBtn","$6442e51d8b52aaf7$var$menuLink","$6442e51d8b52aaf7$var$toggleMenu","classList","toggle","addEventListener","$7e81353768b819eb$var$ms","$7e81353768b819eb$export$6467bd9f4ef23cb9","interval","setInterval","minutes","seconds","ms1","second","minute","Math","floor","$7e81353768b819eb$var$convertMs","min","sec","textContent","$7e81353768b819eb$var$addLeadingZero","$7e81353768b819eb$var$time","clearInterval","value","String","padStart","$6ba7e5650ea97a82$export$a543f39a27f21bad","callBox","fetch","then","response","json","people","insertAdjacentHTML","name","height","mass","skin_color","$6fa7327f1ccc044f$var$header","$6fa7327f1ccc044f$var$main","$6fa7327f1ccc044f$var$startTestBtn","querySelectorAll","$6fa7327f1ccc044f$export$38435c7d2fecd2f","Click","index","this","answers","constructor","type","text","picture","$6fa7327f1ccc044f$export$cef5d51d354050a6","$6fa7327f1ccc044f$export$8fdcabde73f49165","Check","$6fa7327f1ccc044f$var$renderPage","nextQuestionBtn","contains","$6fa7327f1ccc044f$var$nextPage","questionContainer","footer","$f8e8241183dd669e$export$e0969da9b8fb378d","currentQuestion","questions","$6fa7327f1ccc044f$var$progress","$6fa7327f1ccc044f$var$questionText","$6fa7327f1ccc044f$var$answerText","add","$6fa7327f1ccc044f$var$Init","$6fa7327f1ccc044f$var$renderResultPage","questionProgress","setAttribute","question","line","i3","remove","answersBtn","i4","e","i5","i6","i7","$6fa7327f1ccc044f$var$Click","headerTitle","headerBox","setTimeout","results","result","footerText","window","$c9ba7c65681dddf7$exports","$39e80e417bb426a6$exports","$881bc83818fe475c$exports","$f8e8241183dd669e$export$5be82eb8d376fece","$f8e8241183dd669e$export$2deac3956661e672","score","correct","i1","Next","End","i2","questions1","resuits"],"version":3,"file":"index.3b17c9f8.js.map"}